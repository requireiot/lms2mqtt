#! /bin/sh
# /etc/init.d/bw-lms2mqtt
### BEGIN INIT INFO
# Provides:          bw-lms2mqtt
# Required-Start:    $local_fs $syslog $network mosquitto
# Required-Stop:     $local_fs $syslog $network mosquitto
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Publish Squeezebox notifications via MQTT
# Description:       Publish Squeezebox/Logitech Media Server notifications via MQTT
### END INIT INFO

# bw init.d script
# $Id: $

DESC="Publish Squeezebox status via MQTT"
# Change the next 3 lines to suit where you install your script and what you want to call it
DAEMON_PATH=/home/admin/daemons/lms2mqtt
DAEMON=$DAEMON_PATH/lms2mqtt.py
DAEMON_NAME=bw-lms2mqtt

# Add any command line options for your daemon here
DAEMON_OPTS=""

# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the 
# Raspberry Pi GPIO from Python.
DAEMON_USER=root

PIDFILE=/var/run/$DAEMON_NAME.pid

# The following part always gets executed.
# pull in sysconfig settings
[ -f /etc/default/$DAEMON_NAME ] && . /etc/default/$DAEMON_NAME

. /lib/lsb/init-functions

do_start () {
    log_daemon_msg "Starting system $DAEMON_NAME daemon"
    start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --chuid $DAEMON_USER --startas $DAEMON -- $DAEMON_OPTS
    log_end_msg $?
    logger -t $(basename $0) "Starting system $DAEMON_NAME daemon"
}
do_stop () {
    log_daemon_msg "Stopping system $DAEMON_NAME daemon"
    start-stop-daemon --stop --pidfile $PIDFILE --retry 10
    log_end_msg $?
}


# The following part carries out specific functions depending on arguments.
case "$1" in
  start)
    do_start
    ;;
  stop)
    do_stop
    ;;
  status)
    status_of_proc "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
    ;;
  restart)
    do_stop
    do_start
    ;;
  *)
    echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
